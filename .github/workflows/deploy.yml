name: Deploy to Amazon ECS - Develop

on:
    push:
        branches: [ "cicd-test" ]

env:
    AWS_REGION: ap-northeast-2
    ECR_REPOSITORY: ttoklip-v2
#    ECS_SERVICE: ddoklip-backservice
#    ECS_CLUSTER: ddoklip
#    ECS_TASK_DEFINITION: ./aws/task_definition.json
#    CONTAINER_NAME: ddoklip-backend

permissions:
    contents: read

jobs:
    build-docker-and-push-ecr:
        name: Build and Push Docker Image to ECR
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Set up JDK 17
              uses: actions/setup-java@v3
              with:
                  java-version: '17'
                  distribution: 'temurin'

            - name: Add Firebase config to environment
              run: echo "${{ secrets.FIREBASE_CONFIG }}" > $GITHUB_WORKSPACE/firebase-config.json

            - name: Build with Gradle
              run: ./gradlew bootJar

            - name: Configure AWS ECR credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ECR_PUSH_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_ECR_PUSH_SECRET }}
                  aws-region: ${{ env.AWS_REGION }}

            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v1

            - name: Build, tag, and push image to Amazon ECR
              id: build-image
              env:
                  ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
                  IMAGE_TAG: ${{ github.sha }}
              run: |
                  docker build --build-arg JASYPT_ENCRYPTOR_PASSWORD=${{ secrets.JASYPT_ENCRYPTOR_PASSWORD }} -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
                  docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
                  echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
