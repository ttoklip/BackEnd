name: CI/CD Workflow for Multi-Module Project

on:
  push:
    branches:
      - setting/change-cicd-action

jobs:
  ci:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: "ap-northeast-2"

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build and Test Each Module
        run: |
          ./gradlew :ttoklip-api:clean :ttoklip-api:build :ttoklip-api:test
          ./gradlew :ttoklip-batch:clean :ttoklip-batch:build :ttoklip-batch:test
          ./gradlew :ttoklip-notification:clean :ttoklip-notification:build :ttoklip-notification:test

      - name: Verify Build Artifacts
        run: |
          echo "Verifying build artifacts..."
          ls -la ttoklip-api/build/libs/
          ls -la ttoklip-batch/build/libs/
          ls -la ttoklip-notification/build/libs/

      - name: Save Build Artifacts
        run: |
          mkdir -p deploy
          cp ttoklip-api/build/libs/ttoklip-api-SNAPSHOT.jar deploy/
          cp ttoklip-batch/build/libs/ttoklip-batch-SNAPSHOT.jar deploy/
          cp ttoklip-notification/build/libs/ttoklip-notification-SNAPSHOT.jar deploy/
          cp docker-compose.prod.yml deploy/
          zip -r deploy-package.zip deploy

      - name: Configure AWS Credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.SSM_PUBLIC }}
          aws configure set aws_secret_access_key ${{ secrets.SSM_PRIVATE }}
          aws configure set region $AWS_REGION

      - name: Upload to S3
        run: |
          aws s3 cp deploy-package.zip s3://ttoklip-deploy/zips/deploy-package.zip --region ap-northeast-2

  cd:
    needs: ci
    runs-on: ubuntu-latest

    env:
      AWS_REGION: "ap-northeast-2"

    steps:
      - name: Configure AWS Credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.SSM_PUBLIC }}
          aws configure set aws_secret_access_key ${{ secrets.SSM_PRIVATE }}
          aws configure set region $AWS_REGION

      - name: Upload Deploy Script to S3
        run: |
          echo "#!/bin/bash" > deploy_script.sh
          echo "mkdir -p /home/ec2-user/ttoklip/application/deploy" >> deploy_script.sh
          echo "sudo mkdir -p /home/ec2-user/ttoklip/application" >> deploy_script.sh
          echo "sudo chown -R ec2-user:ec2-user /home/ec2-user/ttoklip" >> deploy_script.sh
          echo "sudo chmod -R 755 /home/ec2-user/ttoklip" >> deploy_script.sh
          echo "aws s3 cp s3://ttoklip-deploy/zips/deploy-package.zip /home/ec2-user/ttoklip/application/deploy-package.zip --region ap-northeast-2" >> deploy_script.sh
          echo "unzip -o /home/ec2-user/ttoklip/application/deploy-package.zip -d /home/ec2-user/ttoklip/application/deploy" >> deploy_script.sh
          echo "docker-compose -f /home/ec2-user/ttoklip/application/deploy/docker-compose.prod.yml --env-file /home/ec2-user/ttoklip/application/.env up -d --build" >> deploy_script.sh

          zip deploy_script.zip deploy_script.sh
          
          aws s3 cp deploy_script.zip s3://ttoklip-deploy/zips/deploy-script.zip --region ap-northeast-2

      - name: Execute Deploy Script on EC2 via SSM
        run: |
          aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --targets "Key=instanceIds,Values=${{ secrets.EC2_INSTANCE_ID }}" \
            --parameters 'commands=[
              "aws s3 cp s3://ttoklip-deploy/zips/deploy-script.zip /home/ec2-user/ttoklip/deploy-script.zip --region ap-northeast-2",
              "unzip -o /home/ec2-user/ttoklip/deploy-script.zip -d /home/ec2-user/ttoklip",
              "chmod +x /home/ec2-user/ttoklip/deploy_script.sh",
              "/home/ec2-user/ttoklip/deploy_script.sh"
            ]' \
            --region $AWS_REGION
