name: CI/CD Workflow for Multi-Module Project

on:
  push:
    branches:
      - setting/change-cicd-action

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build and Test Each Module
        run: |
          ./gradlew :ttoklip-api:clean :ttoklip-api:build :ttoklip-api:test
          ./gradlew :ttoklip-batch:clean :ttoklip-batch:build :ttoklip-batch:test
          ./gradlew :ttoklip-notification:clean :ttoklip-notification:build :ttoklip-notification:test

      - name: Verify Build Artifacts
        run: |
          echo "Verifying build artifacts..."
          ls -la ttoklip-api/build/libs/
          ls -la ttoklip-batch/build/libs/
          ls -la ttoklip-notification/build/libs/

      - name: Save Build Artifacts
        run: |
          mkdir -p deploy
          cp ttoklip-api/build/libs/ttoklip-api-SNAPSHOT.jar deploy/
          cp ttoklip-batch/build/libs/ttoklip-batch-SNAPSHOT.jar deploy/
          cp ttoklip-notification/build/libs/ttoklip-notification-SNAPSHOT.jar deploy/
          cp docker-compose.prod.yml deploy/
          zip -r deploy-package.zip deploy

      - name: Upload to S3
        run: |
          aws s3 cp deploy-package.zip s3://ttoklip-deploy/zips/deploy-package.zip --region ap-northeast-2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.SSM_PUBLIC }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SSM_PRIVATE }}

  cd:
    needs: ci
    runs-on: ubuntu-latest

    env:
      AWS_REGION: "ap-northeast-2"

    steps:
      - name: Download from S3
        run: |
          aws s3 cp s3://your-bucket-name/path/to/deploy-package.zip /home/ec2-user/ttoklip/application/deploy-package.zip --region $AWS_REGION
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.SSM_PUBLIC }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SSM_PRIVATE }}

      - name: Prepare and Deploy on EC2
        run: |
          aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --targets "Key=instanceIds,Values=${{ secrets.EC2_INSTANCE_ID }}" \
            --parameters 'commands=[
              "cd /home/ec2-user/ttoklip/application",
              "unzip -o /home/ec2-user/ttoklip/application/deploy-package.zip -d /home/ec2-user/ttoklip/application/deploy",
              "docker-compose -f /home/ec2-user/ttoklip/application/deploy/docker-compose.prod.yml --env-file .env up -d --build"
            ]' \
            --region $AWS_REGION
