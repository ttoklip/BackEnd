version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile-api-prod
      args:
        JASYPT_ENCRYPTOR_PASSWORD: ${JASYPT_ENCRYPTOR_PASSWORD}
    container_name: api
    environment:
      SPRING_PROFILES_ACTIVE: prod
      JASYPT_ENCRYPTOR_PASSWORD: ${JASYPT_ENCRYPTOR_PASSWORD}
      KAFKA_BOOTSTRAP_SERVERS: kafka:9093
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    ports:
      - "8080:8080"
    volumes:
      - ./ttoklip-api/src:/app/src
    networks:
      - ttoklip_network
      - monitoring_network

  batch:
    build:
      context: .
      dockerfile: Dockerfile-batch-prod
      args:
        JASYPT_ENCRYPTOR_PASSWORD: ${JASYPT_ENCRYPTOR_PASSWORD}
    container_name: batch
    environment:
      SPRING_PROFILES_ACTIVE: prod
      JASYPT_ENCRYPTOR_PASSWORD: ${JASYPT_ENCRYPTOR_PASSWORD}
      KAFKA_BOOTSTRAP_SERVERS: kafka:9093
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    ports:
      - "8081:8081"  # 외부에서 접근할 수 있도록 포트 매핑 추가
    volumes:
      - ./ttoklip-batch/src:/app/src
    networks:
      - ttoklip_network
      - monitoring_network

  notification:
    build:
      context: .
      dockerfile: Dockerfile-notification-prod
      args:
        JASYPT_ENCRYPTOR_PASSWORD: ${JASYPT_ENCRYPTOR_PASSWORD}
    container_name: notification
    environment:
      SPRING_PROFILES_ACTIVE: prod
      JASYPT_ENCRYPTOR_PASSWORD: ${JASYPT_ENCRYPTOR_PASSWORD}
      KAFKA_BOOTSTRAP_SERVERS: kafka:9093
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    ports:
      - "8002:8002"
    networks:
      - ttoklip_network
      - monitoring_network

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    restart: always
    environment:
      - REDIS_PASSWORD=qwertyuiop1234
    networks:
      - ttoklip_network

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - api
    networks:
      - ttoklip_network

  zookeeper:
    image: bitnami/zookeeper:latest  # Bitnami의 최신 Zookeeper 이미지 사용
    container_name: zookeeper
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    ports:
      - "2181:2181"
    networks:
      - ttoklip_network

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    ports:
      - "9093:9093"
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      - ttoklip_network


networks:
  monitoring_network:
    external: true
  ttoklip_network:
    external: true
